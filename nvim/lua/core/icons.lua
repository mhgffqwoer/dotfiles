---@alias BorderStyle "rounded" | "double" | "thin" | "empty" | "thick" | "debug"
---@alias BorderOrder "t-r-b-l-tl-tr-br-bl" | "tl-t-tr-r-br-b-bl-l"

local M = {
	beast = {
		vim = "",
		nvim = "",
	},
	mason = {
		pending = " ",
		installed = "󰄳 ",
		uninstalled = "󰚌 ",
	},
	lazy = {
		ft = "",
		lazy = "󰂠 ",
		loaded = " ",
		not_loaded = " ",
	},
	diagnostics = {
		error = "",
		warn = "",
		hint = "",
		info = "",
	},
	git = {
		added = "",
		modified = "",
		removed = "",
		renamed = "➜",
		untracked = "",
		ignored = "",
		unstaged = "U",
		staged = "",
		conflict = "",
		deleted = "",
	},
	gitsigns = {
		add = "│",
		change = "┊",
		delete = "│",
		topdelete = "│",
		changedelete = "~",
		untracked = "│",
	},
	kinds = {
		Array = "",
		Boolean = "",
		Class = "",
		Color = "",
		Constant = "",
		Constructor = "",
		Copilot = "",
		Enum = "",
		EnumMember = "",
		Event = "",
		Field = "",
		File = "",
		Folder = "",
		Function = "",
		Interface = "",
		Key = "",
		Keyword = "",
		Method = "",
		Module = "",
		Namespace = "",
		Null = "",
		Number = "",
		Object = "",
		Operator = "",
		Package = "",
		Property = "",
		Reference = "",
		Snippet = "",
		String = "",
		Struct = "",
		Text = "",
		TypeParameter = "",
		Unit = "",
		Value = "",
		Variable = "",
		Macro = "", -- Macro
	},
	borders = {
		rounded = {
			top = "─",
			right = "│",
			bottom = "─",
			left = "│",
			top_left = "╭",
			top_right = "╮",
			bottom_right = "╯",
			bottom_left = "╰",
		},
		double = {
			top = "═",
			right = "║",
			bottom = "═",
			left = "║",
			top_left = "╔",
			top_right = "╗",
			bottom_right = "╝",
			bottom_left = "╚",
		},
		thin = {
			top = "▔",
			right = "▕",
			bottom = "▁",
			left = "▏",
			top_left = "🭽",
			top_right = "🭾",
			bottom_right = "🭿",
			bottom_left = "🭼",
		},
		empty = {
			top = " ",
			right = " ",
			bottom = " ",
			left = " ",
			top_left = " ",
			top_right = " ",
			bottom_right = " ",
			bottom_left = " ",
		},
		thick = {
			top = "▄",
			right = "█",
			bottom = "▀",
			left = "█",
			top_left = "▄",
			top_right = "▄",
			bottom_right = "▀",
			bottom_left = "▀",
		},
		debug = {
			top = "t",
			right = "r",
			bottom = "b",
			left = "l",
			top_left = "🭽",
			top_right = "🭾",
			bottom_right = "🭿",
			bottom_left = "🭼",
		},
	},
	brain = {
		codeium = "󰘦 ",
		copilot = " ",
	},
}

M.colors = {
	brain = {
		codeium = "#09B6A2",
		copilot = "#FEFFFF",
	},
	kinds = {
		-- this highlight is used to override other highlights
		-- you can take advantage of its `bg` and set a background throughout your winbar
		-- (e.g. basename will look like thi = "#c0caf5"bold = true })
		normal = "#c0caf5",
	
		-- these highlights correspond to symbols table from config
		ellipsis = "#737aa2",
		separator = "#737aa2",
		modified = "#737aa2",
	
		-- these highlights represent the _text_ of three main parts of barbecue
		dirname = "#737aa2",
		basename = { bold = true },
		context = {},
	
		-- these highlights are used for context/navic icons
		File = "#ac8fe4",
		Module = "#ac8fe4",
		Namespace = "#ac8fe4",
		Package = "#ac8fe4",
		Class = "#ac8fe4",
		Method = "#ac8fe4",
		Property = "#ac8fe4",
		Field = "#ac8fe4",
		Constructor = "#ac8fe4",
		Enum = "#ac8fe4",
		Interface = "#ac8fe4",
		Function = "#ac8fe4",
		Variable = "#ac8fe4",
		Constant = "#ac8fe4",
		String = "#ac8fe4",
		Number = "#ac8fe4",
		Boolean = "#ac8fe4",
		Array = "#ac8fe4",
		Object = "#ac8fe4",
		Key = "#ac8fe4",
		Null = "#ac8fe4",
		EnumMember = "#ac8fe4",
		Struct = "#ac8fe4",
		Event = "#ac8fe4",
		Operator = "#ac8fe4",
		TypeParameter = "#ac8fe4",
	  },
}

return M
